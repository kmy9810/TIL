<23.03.19>
1. 리스트와 딕셔너리
-'' 형태는 string
-split() : 자르기
-people[2]['score']['science'] : people리스트 -> 2번 인덱스인 dictionary -> score -> 그 중 science의 점수를 가져와라!
-보통 list 안에 dictionary 형태로 많이 사용됨!

2. 반복문
-반복문 가지고 놀기~
-% : 나머지
-x = x+1 -> x += 1

3. 조건문
- 유효성을 검사하는 else문을 만듦 -> 함수가 길어짐..!
- 답안 코드를 보니 생각보다 간단..! -> 짧은 길이라면 괜찮겠지만 후에 긴 문자열이 왔을 땐 split()을 사용하자!

4. 튜플 & 집합
- 튜플 -> 괄호(), 불변형! ex) 3.14
- 집합 -> set(), 중복을 제거, 합,교,차집합 가능
- | : 합집합, - : 차집합

5. 예외처리
- 어떤 에러인지 모를 수 있으니 되도록 사용 하지말자!
- try해보고 안되면 except문으로 가라!

6. 한줄의 마법
- 간단하게 사용 가능! -> 괄호는 필요 없지만 보기 편하기에 사용!
- 조건문, 반복문 모두 사용가능!

7. map
- 함수 안에 반복문을 만들지 않고 바로 리턴문 뒤에 작성!
- map(check_adult, people) : check_adult 함수에 people을 하나씩 넣어서 돌려라!
- print할 때는 리스트화 시켜야 함! -> 없으면 오류!!

8. lambda
-굳이 함수를 사용할 필요 없이 lambda 형식을 사용하면 한줄에 clear!
-x를 사용하는게 관용적임
-list화 안했을 때 : <lambda object at 0x7f9a6ef8cd60> 오류 발생

9. filter
- filter는 조건에 맞는 것으로 걸러서 가져옴!
- 사용하기 간편!
- list화 안했을 때 : <filter object at 0x7f9a6ef8cd60> 오류  발생!

10.함수 심화
- *args를 통해 파라미터를 무한히 받을 수 있음!
- **kwargs를 통해 dictionary형태로 변환할 수 있음!

